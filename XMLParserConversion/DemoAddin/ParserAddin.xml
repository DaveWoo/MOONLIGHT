<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DemoAddin</name>
    </assembly>
    <members>
        <member name="T:DemoAddin.AnalysePanel">
            <summary>
            Interaction logic for AnalysePanel.xaml
            </summary>
            <summary>
            AnalysePanel
            </summary>
        </member>
        <member name="M:DemoAddin.AnalysePanel.FindSpecialProjectItem(System.String)">
            <summary>
            1. If return value is null, please make sure *.sln is opened.
            2. No related csFile was found.
            </summary>
            <param name="csFile"></param>
            <returns></returns>
        </member>
        <member name="M:DemoAddin.AnalysePanel.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DemoAddin.LoadOnDemand.TreeViewItemViewModel">
            <summary>
            Base class for all ViewModel classes displayed by TreeViewItems.
            This acts as an adapter between a raw data object and a TreeViewItem.
            </summary>
        </member>
        <member name="M:DemoAddin.LoadOnDemand.TreeViewItemViewModel.LoadChildren">
            <summary>
            Invoked when the child items need to be loaded on demand.
            Subclasses can override this to populate the Children collection.
            </summary>
        </member>
        <member name="P:DemoAddin.LoadOnDemand.TreeViewItemViewModel.Children">
            <summary>
            Returns the logical child items of this object.
            </summary>
        </member>
        <member name="P:DemoAddin.LoadOnDemand.TreeViewItemViewModel.HasSubChild">
            <summary>
            Returns true if this object's Children have not yet been populated.
            </summary>
        </member>
        <member name="P:DemoAddin.LoadOnDemand.TreeViewItemViewModel.IsExpanded">
            <summary>
            Gets/sets whether the TreeViewItem
            associated with this object is expanded.
            </summary>
        </member>
        <member name="P:DemoAddin.LoadOnDemand.TreeViewItemViewModel.IsSelected">
            <summary>
            Gets/sets whether the TreeViewItem
            associated with this object is selected.
            </summary>
        </member>
        <member name="T:DemoAddin.Connect">
            <summary>The object for implementing an Add-in.</summary>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:DemoAddin.Connect.#ctor">
            <summary>Implements the constructor for the Add-in object. Place your initialization code within this method.</summary>
        </member>
        <member name="M:DemoAddin.Connect.Exec(System.String,EnvDTE.vsCommandExecOption,System.Object@,System.Object@,System.Boolean@)">
            <summary>Implements the Exec method of the IDTCommandTarget interface. This is called when the command is invoked.</summary>
            <param term='commandName'>The name of the command to execute.</param>
            <param term='executeOption'>Describes how the command should be run.</param>
            <param term='varIn'>Parameters passed from the caller to the command handler.</param>
            <param term='varOut'>Parameters passed from the command handler to the caller.</param>
            <param term='handled'>Informs the caller if the command was handled or not.</param>
            <seealso class='Exec' />
        </member>
        <member name="M:DemoAddin.Connect.OnAddInsUpdate(System.Array@)">
            <summary>Implements the OnAddInsUpdate method of the IDTExtensibility2 interface. Receives notification when the collection of Add-ins has changed.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:DemoAddin.Connect.OnBeginShutdown(System.Array@)">
            <summary>Implements the OnBeginShutdown method of the IDTExtensibility2 interface. Receives notification that the host application is being unloaded.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:DemoAddin.Connect.OnConnection(System.Object,Extensibility.ext_ConnectMode,System.Object,System.Array@)">
            <summary>Implements the OnConnection method of the IDTExtensibility2 interface. Receives notification that the Add-in is being loaded.</summary>
            <param term='application'>Root object of the host application.</param>
            <param term='connectMode'>Describes how the Add-in is being loaded.</param>
            <param term='addInInst'>Object representing this Add-in.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:DemoAddin.Connect.OnDisconnection(Extensibility.ext_DisconnectMode,System.Array@)">
            <summary>Implements the OnDisconnection method of the IDTExtensibility2 interface. Receives notification that the Add-in is being unloaded.</summary>
            <param term='disconnectMode'>Describes how the Add-in is being unloaded.</param>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:DemoAddin.Connect.OnStartupComplete(System.Array@)">
            <summary>Implements the OnStartupComplete method of the IDTExtensibility2 interface. Receives notification that the host application has completed loading.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:DemoAddin.Connect.QueryStatus(System.String,EnvDTE.vsCommandStatusTextWanted,EnvDTE.vsCommandStatus@,System.Object@)">
            <summary>Implements the QueryStatus method of the IDTCommandTarget interface. This is called when the command's availability is updated</summary>
            <param term='commandName'>The name of the command to determine state for.</param>
            <param term='neededText'>Text that is needed for the command.</param>
            <param term='status'>The state of the command in the user interface.</param>
            <param term='commandText'>Text requested by the neededText parameter.</param>
            <seealso class='Exec' />
        </member>
        <member name="M:DemoAddin.Connect.AddSloutionEventHandler">
            <summary>
            add events handler to specific add-in events
            </summary>
        </member>
        <member name="T:DemoAddin.LoadOnDemand.ExplorerViewModel">
            <summary>
            The ViewModel for the TreeListControl demo.  
            </summary>
        </member>
        <member name="T:DemoAddin.Common">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:DemoAddin.LoadOnDemand.TreeList">
            <summary>
            TreeList
            </summary>
        </member>
        <member name="M:DemoAddin.LoadOnDemand.TreeList.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
